costMat = []

def readfile():  
    f = open("data.txt", "r")         
    for rivi in f:
        rivi = rivi.strip()
        r = []
        for luku in rivi:
            r.append(int(luku))
        costMat.append(r)




def printCostMatrix(costMat):
   # printing the min cost table
   print("The DP table created is:")
   for i in range(R):
       for j in range(C):
           print(costMat[i][j], "|", end = "")
       print("")

def calcMinCost(costMat):

   for i in range(1, R):
       costMat[i][0] += costMat[i-1][0]

   for j in range(1, C):
       costMat[0][j] += costMat[0][j-1]
   for i in range(1, R):
       for j in range(1, C):
           # originaalissa min(costMat[i-1][j-1], min(costMat[i-1][j], costMat[i][j-1]))   = DIAGONAALILIIKE !!!!
           costMat[i][j] += min(costMat[i-1][j], costMat[i][j-1])    
   
   printCostMatrix(costMat)
   
   return costMat[R-1][C-1]

def main():
   #costMat = [ [1, 2, 3, 1, 2], [4, 9, 2, 5, 6], [3, 2, 3, 1, 9 ],[2, 1, 3, 2, 7], [1, 2, 5, 3, 1] ]
                       
   res = calcMinCost(costMat)
   print("The minimum sum path of the given matrix is: ", res - costMat[0][0])
   

readfile()
R, C = len(costMat), len(costMat[0])
main()